@{
    ViewData["Title"] = "Reset Password";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Reset Password</h3>
                </div>
                <div class="card-body">
                    <div class="alert alert-info">
                        <p>Enter your new password below.</p>
                    </div>
                    
                    <div id="resetPasswordAlert" class="alert d-none" role="alert"></div>
                    
                    <form id="resetPasswordForm">
                        <input type="hidden" id="email" value="@ViewBag.Email">
                        <input type="hidden" id="token" value="@ViewBag.Token">
                        
                        <div class="mb-3">
                            <label for="newPassword" class="form-label">New Password</label>
                            <input type="password" class="form-control" id="newPassword" name="newPassword" required minlength="8">
                            <div class="form-text">Password must be at least 8 characters long.</div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary" id="submitBtn">Reset Password</button>
                            <a href="/Auth/OrganizationLogin" class="btn btn-outline-secondary">Back to Login</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const resetPasswordForm = document.getElementById('resetPasswordForm');
            const alertBox = document.getElementById('resetPasswordAlert');
            const submitBtn = document.getElementById('submitBtn');
            
            resetPasswordForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const email = document.getElementById('email').value;
                const token = document.getElementById('token').value;
                const newPassword = document.getElementById('newPassword').value;
                const confirmPassword = document.getElementById('confirmPassword').value;
                
                // Validate passwords match
                if (newPassword !== confirmPassword) {
                    alertBox.classList.remove('d-none', 'alert-success');
                    alertBox.classList.add('alert-danger');
                    alertBox.textContent = 'Passwords do not match.';
                    return;
                }
                
                // Validate password length
                if (newPassword.length < 8) {
                    alertBox.classList.remove('d-none', 'alert-success');
                    alertBox.classList.add('alert-danger');
                    alertBox.textContent = 'Password must be at least 8 characters long.';
                    return;
                }
                
                // Disable button and show loading state
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Resetting...';
                
                try {
                    const response = await fetch('/Auth/api/reset-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ email, token, newPassword })
                    });
                    
                    const result = await response.json();
                    
                    // Show success or error message
                    alertBox.classList.remove('d-none', 'alert-danger', 'alert-success');
                    
                    if (response.ok) {
                        alertBox.classList.add('alert-success');
                        alertBox.textContent = result.message;
                        resetPasswordForm.reset();
                        
                        // Redirect to login page after 3 seconds
                        setTimeout(() => {
                            window.location.href = '/Auth/OrganizationLogin';
                        }, 3000);
                    } else {
                        alertBox.classList.add('alert-danger');
                        alertBox.textContent = result.message || 'An error occurred. Please try again.';
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alertBox.classList.remove('d-none');
                    alertBox.classList.add('alert-danger');
                    alertBox.textContent = 'An error occurred. Please try again.';
                } finally {
                    // Reset button state
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = 'Reset Password';
                }
            });
        });
    </script>
}

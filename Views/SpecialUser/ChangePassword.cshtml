@model OnlineAssessment.Web.Models.DTOs.ChangeSpecialUserPasswordRequest

@{
    ViewData["Title"] = "Change Password";
    var specialUserSapId = ViewBag.SpecialUserSapId;
    var username = ViewBag.Username;
    var email = ViewBag.Email;
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-key me-2"></i>Change Password
                    </h4>
                    <small class="text-muted">
                        User: <strong>@username</strong> (@email)
                    </small>
                </div>
                <div class="card-body">
                    <div class="alert alert-info" role="alert">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>Security Notice:</strong> The new password will be immediately effective.
                        Make sure to communicate the new password securely to the user.
                    </div>

                    <form asp-action="ChangePassword" asp-route-id="@specialUserSapId" method="post">
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            <label asp-for="NewPassword" class="form-label">
                                New Password <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <input asp-for="NewPassword" type="password" class="form-control" placeholder="Enter new password" />
                                <button type="button" class="btn btn-outline-secondary" onclick="togglePassword()">
                                    <i class="fas fa-eye" id="passwordToggleIcon"></i>
                                </button>
                            </div>
                            <div class="form-text">
                                <ul class="mb-0 mt-2">
                                    <li>Minimum 6 characters required</li>
                                    <li>Use a combination of letters, numbers, and symbols for better security</li>
                                    <li>Avoid using common words or personal information</li>
                                </ul>
                            </div>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">
                                Confirm New Password <span class="text-danger">*</span>
                            </label>
                            <input type="password" id="confirmPassword" class="form-control" placeholder="Confirm new password" />
                            <div id="passwordMatchFeedback" class="form-text"></div>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a href="@Url.Action("Index")" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-2"></i>Back to List
                            </a>
                            <button type="submit" class="btn btn-warning" id="submitBtn" disabled>
                                <i class="fas fa-key me-2"></i>Change Password
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function togglePassword() {
            const passwordInput = document.getElementById('NewPassword');
            const toggleIcon = document.getElementById('passwordToggleIcon');

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleIcon.className = 'fas fa-eye-slash';
            } else {
                passwordInput.type = 'password';
                toggleIcon.className = 'fas fa-eye';
            }
        }

        function checkPasswordMatch() {
            const password = document.getElementById('NewPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const feedback = document.getElementById('passwordMatchFeedback');
            const submitBtn = document.getElementById('submitBtn');

            if (confirmPassword === '') {
                feedback.innerHTML = '';
                submitBtn.disabled = true;
                return;
            }

            if (password === confirmPassword) {
                feedback.innerHTML = '<i class="fas fa-check text-success"></i> Passwords match';
                feedback.className = 'form-text text-success';
                submitBtn.disabled = password.length < 6;
            } else {
                feedback.innerHTML = '<i class="fas fa-times text-danger"></i> Passwords do not match';
                feedback.className = 'form-text text-danger';
                submitBtn.disabled = true;
            }
        }

        // Add event listeners
        document.getElementById('NewPassword').addEventListener('input', checkPasswordMatch);
        document.getElementById('confirmPassword').addEventListener('input', checkPasswordMatch);

        // Form validation
        document.querySelector('form').addEventListener('submit', function(e) {
            const password = document.getElementById('NewPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            if (password.length < 6) {
                e.preventDefault();
                alert('Password must be at least 6 characters long.');
                return;
            }

            if (password !== confirmPassword) {
                e.preventDefault();
                alert('Passwords do not match.');
                return;
            }
        });
    </script>
}

<style>
    .card {
        border: none;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }

    .form-label {
        font-weight: 500;
    }

    .text-danger {
        font-size: 0.875em;
    }

    .input-group .btn {
        border-left: none;
    }

    .form-control:focus {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .alert {
        border-radius: 10px;
    }

    .form-text ul {
        font-size: 0.875em;
        color: #6c757d;
    }

    .form-text ul li {
        margin-bottom: 0.25rem;
    }
</style>
